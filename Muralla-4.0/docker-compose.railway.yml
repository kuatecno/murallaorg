version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: muralla
      POSTGRES_USER: muralla
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U muralla -d muralla"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    image: kavidoi/muralla-admin:backend-latest
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://muralla:$POSTGRES_PASSWORD@postgres:5432/muralla?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: $JWT_SECRET
      JWT_EXPIRES_IN: $JWT_EXPIRES_IN
      LOG_LEVEL: $LOG_LEVEL
      PORT: $PORT
      BACKEND_URL: $RAILWAY_PUBLIC_DOMAIN
      FRONTEND_URL: $FRONTEND_DOMAIN
      ALLOWED_ORIGINS: $FRONTEND_DOMAIN
    ports:
      - "$PORT:$PORT"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:' + (process.env.PORT || 3000) + '/healthz', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    image: kavidoi/muralla-admin:frontend-latest
    environment:
      PORT: $PORT
      VITE_API_BASE_URL: $BACKEND_DOMAIN
    ports:
      - "$PORT:$PORT"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
