version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: muralla-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: muralla
      POSTGRES_USER: muralla
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-1234}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./muralla-backend/prisma/row-level-security.sql:/docker-entrypoint-initdb.d/01-rls.sql
    networks:
      - muralla-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U muralla -d muralla"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: muralla-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - muralla-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: ./muralla-backend/Dockerfile
    container_name: muralla-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://muralla:${POSTGRES_PASSWORD:-1234}@postgres:5432/muralla
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - muralla-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/healthz', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Optional - for full stack deployment)
  frontend:
    build:
      context: ./muralla-frontend
      dockerfile: Dockerfile
    container_name: muralla-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:3000}
      REACT_APP_WS_URL: ${REACT_APP_WS_URL:-ws://localhost:3000}
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - muralla-network
    profiles:
      - frontend

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: muralla-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - muralla-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  muralla-network:
    driver: bridge
